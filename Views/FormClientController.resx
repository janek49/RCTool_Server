<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADw
        CQAAAk1TRnQBSQFMAgEBAgEAARgBAAEYAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBoAAwIBAwNtAcwDfAH/A3cB/wNyAf8DbgH/A2IByuQAAxABFQOSAf8B1QLT
        Af8B4gHgAd8B/wHfAdwB2wH/AeEC3wH/A2sB9BwAAwcBCQMQARYDEwEaAxMBGgMTARoDEwEaAxMBGgMT
        ARoDEwEaAxMBGgMTARoDEwEaAxMBGgMTARoDEAEWAwcBCYwAA0IBbwNpAb0BxAHCAcEB/wHUAc8BzgH/
        A3cB9gNVAZwDagHSA3IB/wNuAf8DaQH/A2UB/wNhAf8DXgHXAy8BSgNHAYYDRwGGA0cBhgNHAYYDRwGG
        A0cBhgNHAYYDRwGGA0cBhgNHAYYDRwGGA0cBhgNHAYYDRwGGAy8BSoAAA1MBjQN5AcwDdgHMA3UBzAN8
        Ad4DngH/A5oB/wN+AfgDhAH/AocBhgH/AYcBhgGFAf8BogGgAZ8B/wHTAc4BzQH/AdMBzgHNAf8B6ALl
        Af8DYgH/A0UBfgHIAr8B/wHHArsB/wHJArwB/wHLAr0B/wHMAr0B/wHOAr4B/wHOAr0B/wHNAr0B/wHN
        ArwB/wHNArwB/wHMArsB/wHMArsB/wHMArsB/wHMArsB/wNFAX6AAAOuAf8B5ALiAf8B1wLVAf8B1QHT
        AdIB/wHRAc4BzQH/AcoBxAHDAf8ByAHDAcIB/wHNAckByAH/AcwCygH/AcwBygHJAf8B2ALWAf8BcgJx
        Af8BuQGxAa4B/wG3Aa8BrgH/AdMBzgHNAf8DZgH/A0IBzAMwAf8DMAH/AVMCUAH/AcACswH/AcMCtQH/
        AcUCtwH/AcACsAH/AaYClgH/AZoCigH/AZoCigH/AacClwH/AcMCsgH/AcwCuwH/AcwCvAH/A0MBeIAA
        A7QB/wHgAt0B/wGnAXABSwH/AacBcAFLAf8BpwFwAUsB/wGnAXABSwH/AacBcAFLAf8BpwFwAUsB/wGn
        AXABSwH/AacBcAFLAf8B2gHVAdQB/wN2Af8BugGyAbEB/wG5AbEBrwH/AdQBzwHOAf8DawH/A0YByQM8
        Af8DQAH/AzAB/wG2Aq0B/wG6Aq8B/wG1AqoB/wGbAo8B/wG/ArUB/wHSAscB/wHTAsgB/wHCArcB/wGc
        ApAB/wHDArIB/wHOAr0B/wNCAXWAAAO6Af8B3gLbAf8BtQGAAVgB/wHOAZgBbgH/AdgBrgGRAf8B2QGv
        AZEB/wHZAa8BkQH/AdoBrwGRAf8B1gGgAXUB/wGnAXABSwH/AdcB0wHRAf8DfAH/AbsBtAGzAf8BuwGz
        AbEB/wHUAdABzwH/A3EB/wNHAcQDOQH/A0IB/wMwAf8BrAKmAf8BsAKoAf8BlwKNAf8BuAKwAf8BtgGh
        AZ0B/wG0AYkBeQH/AbQBigF5Af8BvQGlAaEB/wG+ArQB/wGeApIB/wHOAr4B/wNBAXOAAAPAAf8B3wLc
        Af8BtAF9AVcB/wHLAZUBbAH/Ac0BlwFtAf8BzwGZAW8B/wHRAZsBcAH/AdIBnAFyAf8B1AGeAXMB/wGn
        AXABSwH/AdcB1AHTAf8DhAH/ATkBoQFAAf8BNQGUATUB/wHWAdEB0AH/A3YB/wNKAb0DPwH/A0gB/wMw
        Af8BpQKiAf8BpgKiAf8BhQKAAf8BwAK7Af8BgwFhAVgB/wHMAZkBiAH/AcwBmQGIAf8BhQFjAVkB/wHM
        AsMB/wGHAoEB/wHJArwB/wNAAXGAAAPFAf8B4QHeAdwB/wGzAXsBVgH/AccBkQFpAf8ByQGTAWsB/wHL
        AZUBbAH/Ac0BlwFuAf8BzwGZAW8B/wHRAZsBcQH/AacBcAFLAf8B2QHVAdQB/wOLAf8BoAHIAaQB/wFO
        AakBVAH/AdcB0wHRAf8DfAH/A0wBtwNHAf8DUAH/AzAB/wO5Af8BqgKpAf8BgQJ7Af8BugK3Af8BUAE/
        ATkB/wGZAWMBUgH/AZkBYwFSAf8BUQFAAToB/wHFAr4B/wGBAnsB/wHEAroB/wNAAW+AAAPKAf8B4QHf
        Ad4B/wGxAXoBVQH/AcQBjgFmAf8BxgGQAWgB/wHIAZIBaQH/AcoBlAFrAf8BzAGWAW0B/wHOAZgBbgH/
        AacBcAFLAf8B2wLWAf8DkQH/AcEBuwG5Af8BwAG5AbgB/wHXAtMB/wOEAf8DTAGxA00B/wNWAf8DMAH/
        A8UB/wPFAf8DqgH/A7oB/wF8AXoBeQL/Ad0BzAH/AR0BGgEZAf8BegJ1Af8BswKwAf8BlwKUAf8ByALE
        Af8DPwFtgAADzgH/AeIC3wH/AbABeQFUAf8BsQF5AVQB/wGxAXoBVQH/AbIBewFWAf8BswF8AVYB/wG0
        AX0BVwH/AbUBgAFYAf8BpwFwAUsB/wHcAdgB1wH/A5gB/wONAf8DigH/AdkB1QHUAf8DiwH/A0wBrANa
        Af8DXgH/AzAB/wPOAf8B3QLcAf8DyAH/A7UB/wPOAf8D2QH/A9kB/wPOAf8DtQH/A8gB/wPXAf8DPgFr
        gAAD0wH/AfEC7wH/AeIC3wH/AeIC3wH/AeEB3wHeAf8B4QHeAd0B/wHgAd0B3AH/Ad8B3AHbAf8B3gLb
        Af8B3gHbAdkB/wHtAewB6wH/A54B/wHFAb8BvgH/AcMBvQG7Af8B2gHWAdUB/wORAf8DQgHMAzAB/wMw
        Af8DWgH/A9YB/wOZAf8D1gH/A9EB/wPCAf8DuwH/A7sB/wPCAf8D0QH/A9YB/wPeAf8DPQFpgAADywH5
        A9MB/wPQAf8DzAH/A8gB/wPDAf8DvwH/A7oB/wO1Af8DsAH/A6oB/wOlAf8BlAKTAf8BkgKRAf8B2wHX
        AdYB/wOYAf8DPQFoA+oB/wPlAf8D5QH/A+UB/wPlAf8D5QH/A+UB/wPkAf8D5AH/A+QB/wPkAf8D5AH/
        A+MB/wPnAf8DPQFolAADLwFIA6UB5APfAf8D6gH/Ac8BygHJAf8BywHGAcUB/wHKAcQBwwH/AcgBwwHB
        Af8BxwLBAf8B3AHZAdgB/wOeAf8DIwE0Az0BZwO7Af8DuwH/Az0BZwM9AWcDPQFnAz0BZwM9AWcDPQFn
        Az0BZwM9AWcDPQFnAz0BZwM9AWcDIwE0mAADCwEPA20BqwPcAf8B5gLjAf8B4QHeAdwB/wHfAtwB/wHf
        AdwB2wH/Ad4C2wH/Ae4C7AH/A6UB/wgAAzEBTQMwAU3QAANjAZ8DwwH7A8QB/wPAAf8DuwH/A7YB/wOw
        Af8DYwGnwAABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAcABfwL/BAABwAF/
        BgAB4FcAAfgHAAH8AQABzwH/BAAB/wEAAv8EAAs=
</value>
  </data>
</root>